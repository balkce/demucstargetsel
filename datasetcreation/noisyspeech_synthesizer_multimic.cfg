# Configuration for generating Noisy Speech Dataset

# - sampling_rate: Specify the sampling rate. Default is 16 kHz
# - audioformat: default is .wav
# - audio_length: Minimum Length of each audio clip (noisy and clean speech) in seconds that will be generated by augmenting utterances. 
# - silence_length: Duration of silence introduced between clean speech utterances.
# - total_hours: Total number of hours of data required. Units are in hours. 
# - snr_lower: Lower bound for SNR required (default: 0 dB)
# - snr_upper: Upper bound for SNR required (default: 40 dB)
# - target_level_lower: Lower bound for the target audio level before audiowrite (default: -35 dB)
# - target_level_upper: Upper bound for the target audio level before audiowrite (default: -15 dB)
# - total_snrlevels: Number of SNR levels required (default: 5, which means there are 5 levels between snr_lower and snr_upper)
# - clean_activity_threshold: Activity threshold for clean speech
# - noise_activity_threshold: Activity threshold for noise
# - fileindex_start: Starting file ID that will be used in filenames
# - fileindex_end: Last file ID that will be used in filenames
# - is_test_set: Set it to True if it is the test set, else False for the training set
# - noise_dir: Specify the directory path to all noise files
# - Speech_dir: Specify the directory path to all clean speech files
# - noisy_destination: Specify path to the destination directory to store noisy speech
# - clean_destination: Specify path to the destination directory to store clean speech
# - noise_destination: Specify path to the destination directory to store noise speech
# - log_dir: Specify path to the directory to store all the log files

# Configuration for unit tests
# - snr_test: Set to True if SNR test is required, else False
# - norm_test: Set to True if Normalization test is required, else False
# - sampling_rate_test: Set to True if Sampling Rate test is required, else False
# - clipping_test: Set to True if Clipping test is required, else False
# - unit_tests_log_dir: Specify path to the directory where you want to store logs

[noisy_speech]

sampling_rate: 16000
audioformat: *.wav
audio_length: 5
silence_length: 0.2
total_hours: 200
snr_lower: 0
snr_upper: 20
randomize_snr: True
interf_lower: 0
interf_upper: 3
sir_lower: 0
sir_upper: 20
randomize_sir: True
room_dim_x: 4
room_dim_y: 6
rt60_lower: 0.1
rt60_upper: 3.0
randomize_rt60: True
micdist_lower: 0.05
micdist_upper: 0.21
phase_threshold: 10
target_level_lower: -20
target_level_upper: -15
clean_activity_threshold: 0.6
noise_activity_threshold: 0.0
interf_activity_threshold: 0.6
fileindex_start: None
fileindex_end: None
is_test_set: False
noise_dir: datasets/noise
speech_dir: datasets/clean
noisy_destination: corpus_multimic/noisy
clean_destination: corpus_multimic/clean
noise_destination: corpus_multimic/noise
mic_destination: corpus_multimic/mic
log_dir: logs
# this was on the original cfg but doesn't seem to be used
total_snrlevels: 5 

# this following can be to create:
#  train       : a training set with train_perc*len(recording)
#  validtest   : a validtest set with (1-train_perc)*len(recordings)
#  <otherwise> : the DNS dataset with the complete list of recordings
set_to_create: None
train_perc: 0.8
validtest_noisy_destination: corpus_multimic_validtest/noisy
validtest_clean_destination: corpus_multimic_validtest/clean
validtest_noise_destination: corpus_multimic_validtest/noise
validtest_mic_destination: corpus_multimic_validtest/mic


# Unit tests config
snr_test: True
norm_test: True
sampling_rate_test = True
clipping_test = True

unit_tests_log_dir: corpus/unittests_logs


